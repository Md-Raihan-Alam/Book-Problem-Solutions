def MERGE-SORTED-LISTS(lists)
    n = lists.length
    // Take the lowest element from each of lists together with an index of the list and make list of such pairs.
    // Pairs are of "type" (element-value, index-of-list)
    let lowest-from-each be an empty array
    for i = 1 to n
        add (lists[i][0], i) to lowest-from-each
        delete lists[i][0]
    // This makes min-heap from list lowest-from-each.
    // We are sssuming that pairs of "type" (element-value, index-of-list) are compared according to the values of elements.
    A = MIN-HEAP(lowest-from-each)
    let merged-lists be an empty array
    while not !min-heap.EMPTY()
        element-value, index-of-list = HEAP-EXTRACT-MIN(A)
        add element-value to merged-lists
        if lists[index-of-list].length > 0
            MIN-HEAP-INSERT(A, (lists[index-of-list][0], index-of-list))
            delete lists[index-of-list][0]
    return merged-lists